function isWeiXin() {
    var t = window.navigator.userAgent.toLowerCase();
    return "micromessenger" == t.match(/MicroMessenger/i) ? !0 : !1
}
function setView() {
    document.getElementsByTagName("canvas")[0].style.display = "";
    var t = document.documentElement.clientWidth,
    e = document.documentElement.clientHeight,
    i = document.getElementById("Cocos2dGameContainer"),
    c = document.getElementById("gameCanvas");
    c.style.width = t + "px",
    c.style.height = e + "px",
    i.style.width = t + "px",
    i.style.height = e + "px",
    i.style.margin = "0px"
}
var time_ff = 0,
StartLayer = cc.Layer.extend({
    onEnter: function() {
        this.createRemoveEffect(),
        cc.eventManager.addListener({
            event: cc.EventListener.TOUCH_ONE_BY_ONE,
            swallowTouches: !0,
            onTouchBegan: this.onTouchBegan.bind(this)
        },
        this),
        this.setTag(1992),
        this._super()
    },
    ctor: function() {
        this._super(),
        GameStatus = "START",
        this.createImage(s_squre, Width / 2, Height / 2, Width / 2.5, Width / 2.5, 100, 1, 2),
        this.create_animation(),
        this.schedule(this.check_collission),
        this.schedule(this.update, 1 / 3),
        this.addStars(Width / 9, Width / 9),
        this.create_font("分数:0", "Arial", 30, size.width / 2, .8 * size.height, 2),
        this.best_score(),
        this.back_ground_color(253, 171, 123),
        this.schedule(this.different_level)
    },
    create_animation: function() {
        var t = cc.textureCache.addImage(s_eat_right),
        e = cc.textureCache.addImage(s_eat_right_finish),
        i = new cc.SpriteFrame(t, cc.rect(0, 0, 59, 65)),
        c = new cc.SpriteFrame(e, cc.rect(0, 0, 59, 65));
        this.my_circle = new cc.Sprite(i),
        this.my_circle.x = cc.winSize.width / 2,
        this.my_circle.y = cc.winSize.height / 2,
        this.my_circle._scaleX = Width / 600,
        this.my_circle._scaleY = Width / 600,
        this.addChild(this.my_circle, 3);
        var r = [];
        r.push(i),
        r.push(c);
        var s = new cc.Animation(r, .2),
        o = cc.animate(s);
        this.my_circle.runAction(cc.RepeatForever.create(o))
    },
    addStars: function(t, e) {
        var i = [[Width / 2, Height / 2], [Width / 2, Height / 2 + every_grid_width], [Width / 2, Height / 2 - every_grid_width], [Width / 2 + every_grid_width, Height / 2], [Width / 2 + every_grid_width, Height / 2 + every_grid_width], [Width / 2 + every_grid_width, Height / 2 - every_grid_width], [Width / 2 - every_grid_width, Height / 2], [Width / 2 - every_grid_width, Height / 2 + every_grid_width], [Width / 2 - every_grid_width, Height / 2 - every_grid_width]];
        Math.round(4 * Math.random());
        if (10 > score) var c = new cc.Sprite(food[0]);
        else if (score >= 10 && 19 >= score) var c = new cc.Sprite(food[1]);
        else if (score >= 20 && 29 >= score) var c = new cc.Sprite(food[2]);
        else if (score >= 30) var c = new cc.Sprite(food[3]);
        c._scaleX = t / c.getContentSize().width,
        c._scaleY = e / c.getContentSize().height;
        var r = i,
        s = Math.round(8 * Math.random()),
        o = r[s][0],
        n = r[s][1],
        a = this.my_circle.getPosition().x,
        h = this.my_circle.getPosition().y;
        if (a !== o || h !== n) c.attr({
            x: o,
            y: n
        });
        else {
            var d = i;
            d.splice(s, 1);
            var _ = Math.round(7 * Math.random()),
            l = d[_][0],
            g = d[_][1];
            c.attr({
                x: l,
                y: g
            })
        }
        c.setTag(1),
        this.star = c,
        this.addChild(c, 1)
    },
    addScore: function() {
        score += 1,
        this.scoreLabel.setString("分数:" + score)
    },
    best_score: function() {
        var t = localStorage.getItem("BestScore") || 0;
        score > t && localStorage.setItem("BestScore", score)
    },
    check_collission: function() {
        var t = this.my_circle.getBoundingBox(),
        e = this.star.getPosition().x,
        i = this.star.getPosition().y,
        c = this.star.getBoundingBox();
        cc.rectIntersectsRect(t, c) && (this.addScore(), this.remove_effect(e, i), this.star.removeFromParent(), this.createScoreLab(e, i, Width / 20, Width), this.addStars(Width / 9, Width / 9), this.best_score())
    },
    createScoreLab: function(t, e, i, c) {
        this.scoreADDLabel = new cc.Sprite(s_add_score),
        this.addChild(this.scoreADDLabel, 5),
        this.scoreADDLabel.setPosition(t, e),
        this.scoreADDLabel.runAction(cc.MoveTo.create(.5, {
            x: t,
            y: e + Width / 6
        })),
        this.scoreADDLabel._scaleX = .7,
        this.scoreADDLabel._scaleY = .7,
        this.scoreADDLabel.runAction(cc.fadeOut(1))
    },
    set_level: function(t) {
        var e = cc.winSize;
        this.game_level = new cc.LabelTTF(t, "Arial", 20),
        this.game_level.attr({
            x: e.width / 2,
            y: .85 * e.height
        }),
        this.addChild(this.game_level, 5),
        this.game_level.runAction(cc.fadeOut(1))
    },
    back_ground_color: function(t, e, i) {
        var c = new cc.LayerColor(cc.color(t, e, i));
        c.ignoreAnchor = !1,
        c.anchorX = 1,
        c.anchorY = 1,
        c.x = Width,
        c.y = Height,
        this.addChild(c, 0)
    },
    onTouchBegan: function(t) {
        var e = t.getLocation();
        this.firstX = e.x,
        this.firstY = e.y;
        var i = this.my_circle.getPosition(),
        c = this.firstX - i.x,
        r = this.firstY - i.y,
        s = this.my_circle.getPositionX(),
        o = this.my_circle.getPositionY();
        Math.abs(c) > Math.abs(r) ? c > 5 && Width / 2 + every_grid_width > s ? this.doRight() : -5 > c && s > Width / 2 - every_grid_width && this.doLeft() : r > 5 && Height / 2 + every_grid_width > o ? this.doUp() : -5 > r && o > Height / 2 - every_grid_width && this.doDown()
    },
    doLeft: function() {
        var t = this.my_circle.getPosition().x,
        e = this.my_circle.getPosition().y;
        this.my_circle.runAction(cc.rotateTo(.01, 0, 180)),
        this.my_circle.runAction(cc.moveTo(.01, cc.p(t - every_grid_width, e)))
    },
    doRight: function() {
        var t = this.my_circle.getPosition().x,
        e = this.my_circle.getPosition().y;
        this.my_circle.runAction(cc.rotateTo(.01, 0, 0)),
        this.my_circle.runAction(cc.moveTo(.01, cc.p(t + every_grid_width, e)))
    },
    doDown: function() {
        var t = this.my_circle.getPosition().x,
        e = this.my_circle.getPosition().y;
        this.my_circle.runAction(cc.rotateTo(.01, 90)),
        this.my_circle.runAction(cc.moveTo(.01, cc.p(t, e - every_grid_width)))
    },
    doUp: function() {
        var t = this.my_circle.getPosition().x,
        e = this.my_circle.getPosition().y;
        this.my_circle.runAction(cc.rotateTo(.01, -90)),
        this.my_circle.runAction(cc.moveTo(.01, cc.p(t, e + every_grid_width)))
    },
    update: function() {
        var t = 0,
        e = 1.5;
        switch (!0) {
        case 10 > score: t = 6;
            break;
        case 20 > score: t = 5.5,
            e = 1;
            break;
        case 30 > score: t = 5,
            e = .6;
            break;
        default:
            t = 4,
            e = .4
        }
        this.randomCreateCandyAndObstacle(e, t),
        BlockCircleSprites.length >= 2 && this.removeManyRes(BlockCircleSprites)
    },
    randomCreateCandyAndObstacle: function(t, e) {
        time_ff++,
        t > time_ff / 3 || (this.addCircle(s_block_circle, e), time_ff = 0)
    },
    different_level: function() {
        switch (!0) {
        case 0 == score: this.set_level(NICKNAME[0]);
            break;
        case 10 == score: this.set_level(NICKNAME[1]);
            break;
        case 20 == score: this.set_level(NICKNAME[2]);
            break;
        case 30 == score: this.set_level(NICKNAME[3])
        }
    },
    addCircle: function(t, e) {
        var i = (cc.winSize, cc.textureCache.addImage(t)),
        c = Obstacles.init_obstacles(i),
        r = 0,
        s = start_circle_position,
        o = Math.round(11 * Math.random());
        if (5 >= o) {
            r = 2 >= o ? -80 : y + 80,
            c.setPosition(s[o][0], s[o][1]);
            var n = cc.MoveTo.create(e, cc.p(c.x, r))
        } else {
            r = 8 >= o ? x + 80 : -80,
            c.setPosition(s[o][0], s[o][1]);
            var n = cc.MoveTo.create(e / YRatioX, cc.p(r, c.y))
        }
        c.runAction(n),
        this.addChild(c, 2),
        this.obstacles = c,
        BlockCircleSprites.push(c),
        this.block_position = c.getPosition()
    },
    createRemoveEffect: function() {
        var t, e;
        BLUE_PRACTICES = [];
        for (var i = 0; 8 > i; i++) t = cc.textureCache.addImage(s_effect_while),
        e = new Effect(t),
        this.addChild(e, 5),
        e.setPosition( - Width / 2, -Height / 2),
        BLUE_PRACTICES.push(e)
    },
    remove_effect: function(t, e) {
        var i = BLUE_PRACTICES;
        for (var c in EFFECT_POSITIONS) i[c].setPosition(t, e),
        i[c].addRemove(EFFECT_POSITIONS[c])
    },
    createImage: function(t, e, i, c, r, s, o, n) {
        var a = cc.Sprite.create(t);
        a._scaleX = c / 180,
        a._scaleY = r / 180,
        a.setPosition(e, i),
        a.setOpacity(s),
        a.setTag(n),
        this.nine_grid = a,
        this.addChild(a, o)
    },
    create_font: function(t, e, i, c, r, s) {
        this.scoreLabel = new cc.LabelTTF(t, e, i),
        this.scoreLabel.attr({
            x: c,
            y: r
        }),
        this.addChild(this.scoreLabel, s)
    },
    removeManyRes: function(t) {
        if (this.block_position) for (var e = 0; e < t.length; e++)(this.block_position.y > 1e3 && 0 >= t[e].y || this.block_position.x > 1e3 && 0 >= t[e].x || this.block_position.y < 100 && t[e].y >= Height || this.block_position.x <= 100 && t[e].x >= Width) && (t[e].removeFromParent(), t[e] = void 0, t.splice(e, 1), e -= 1)
    }
}),
MyLoader = cc.Scene.extend({
    _interval: null,
    _lable: null,
    _className: "MyLoader",
    _length: 0,
    _count: 0,
    _winSize: null,
    _processLayer: null,
    _processLayerLength: null,
    _progress_bar: null,
    _pro_bar_position: 0,
    ctor: function() {
        this._super()
    },
    init: function() {
        var t = this;
        t._winSize = cc.director.getWinSize();
        var e = t._bgLayer = cc.LayerColor.create(cc.color(32, 32, 32, 255)),
        i = cc.Sprite.create(s_loading_bg);
        e.setPosition(cc.visibleRect.bottomLeft),
        t.addChild(e, 0),
        i.setScale(.6, .6),
        i.setPosition(t._winSize.width / 2, t._winSize.height / 2),
        e.addChild(i, 1);
        var c = t._progress_bar = cc.Sprite.create(s_progress_bar);
        c.setScale(.6, .6),
        c.setPosition(t._winSize.width / 2 - 160, i.getPositionY() + 26),
        t._pro_bar_position = c.getPositionX(),
        e.addChild(c, 0);
        var r = t._lable = cc.LabelTTF.create("Loading...0%", "Arial", 25);
        r.setPosition(cc.pAdd(cc.visibleRect.center, cc.p(0, 100))),
        r.setColor(cc.color(180, 180, 180));
        var s = cc.LabelTTF.create("正在玩命加载中...", "Verdana", 15);
        s.setColor(cc.color("#000000")),
        s.setPosition(t._winSize.width / 2, t._winSize.height / 2),
        e.addChild(s, 1);
        var o = cc.Sprite.create(s_loading_bottom);
        return o.setPosition(t._winSize.width / 2, t._winSize.height / 7),
        o.setScale(.5, .5),
        e.addChild(o, 1),
        !0
    },
    onEnter: function() {
        var t = this;
        cc.Node.prototype.onEnter.call(t),
        t.schedule(t._startLoading, .3)
    },
    onExit: function() {
        cc.Node.prototype.onExit.call(this);
        var t = "Loading... 100%";
        this._lable.setString(t)
    },
    initWithResources: function(t, e, i) {
        "string" == typeof t && (t = [t]),
        this.resources = t,
        this.cb = e,
        this.target = i
    },
    _startLoading: function() {
        var t = this;
        t.unschedule(t._startLoading);
        var e = t.resources;
        t._length = e.length,
        cc.loader.load(e,
        function(e, i, c) {
            t._count = c
        },
        function() {
            t.cb && t.cb.call(t.target)
        }),
        t.schedule(t._updatePercent)
    },
    _updatePercent: function() {
        var t = this,
        e = t._count + 1,
        i = t._length,
        c = e / i * 100 | 0;
        c = Math.min(c, 100),
        t._progress_bar.setPositionX(t._pro_bar_position + 160 * (c / 100)),
        t._lable.setString("Loading..." + c + "%"),
        e > i && t.unschedule(t._updatePercent)
    }
});
MyLoader.preload = function(t, e, i) {
    cc.loader.loadImg(s_loading_bg, {},
    function(c, r) {
        if (c) throw c;
        var s = cc;
        return s.myloader || (s.myloader = new MyLoader, s.myloader.init()),
        s.myloader.initWithResources(t, e, i),
        cc.director.runScene(s.myloader),
        s.myloader
    })
};
var Obstacles = cc.Sprite.extend({
    init: function() {
        this._scaleX = obstacles_width / 35,
        this._scaleY = obstacles_width / 35
    },
    onEnter: function() {
        this.schedule(this.check_collision),
        this._super()
    },
    check_collision: function() {
        var t = this.getBoundingBox(),
        e = this._parent.my_circle.getBoundingBox();
        if (cc.rectIntersectsRect(t, e)) {
            this.unschedule(this.check_collision),
            GameStatus = "GAMEOVER";
            var i = new SMOVEOtherLayer;
            i.stopLayer(),
            this._parent.addChild(i, 10),
            this._parent.pause()
        }
        "GAMEOVER" == GameStatus && this.pause()
    }
});
Obstacles.init_obstacles = function(t) {
    var e = new Obstacles;
    return e.initWithTexture(t),
    e.init(),
    e
};
var Button = cc.Sprite.extend({
    rect: function() {
        return cc.rect( - this._rect.width / 2, -this._rect.height / 2, this._rect.width, this._rect.height)
    },
    onEnter: function() {
        var t = this;
        cc.eventManager.addListener({
            event: cc.EventListener.TOUCH_ONE_BY_ONE,
            onTouchBegan: t.onTouchBegan.bind(t)
        },
        this),
        this._super()
    },
    onExit: function() {
        this._super()
    },
    onTouchBegan: function(t, e) {
        if (!this.containsTouchLocation(t)) return ! 1;
        var i = this._parent;
        this._parent._parent;
        if ("new_game" == this._action && (this._parent.removeAllChildren(), score = 0, BlockCircleSprites = [], GameStatus = "RUNNING", "RUNNING" == GameStatus && cc.director.resume()), "restart" == this._action) {
            var c = this;
            if (c._parent._parent._parent) console.log("9999999999"),
            this.scheduleOnce(function() {
                var t = c._parent._parent._parent;
                c._parent._parent._parent.remove_all_children(),
                t.restart()
            },
            .5);
            else {
                var r = c._parent._parent;
                c._parent._parent.remove_all_children(),
                r.restart(),
                cc.director.resume()
            }
        }
        if ("home" == this._action && (score = 0, BlockCircleSprites = [], cc.director.runScene(new StartScene)), "continue" == this._action) {
            var c = this;
            pay({},
            function() {
                for (var t = BlockCircleSprites,
                e = 0; e < t.length; e++) t[e].removeFromParent(),
                t[e] = void 0,
                t.splice(e, 1),
                e -= 1;
                GameStatus = "GO",
                c._parent.removeFromParent()
            })
        }
        return "share" == this._action && this._parent.shareLayer(),
        "back_share" == this._action && (this._parent.removeAllChildren(), i.stopLayer(score)),
        "help" == this._action && this._parent.createHelpLayer(),
        "more" == this._action && (clickMore()),
        !0
    },
    containsTouchLocation: function(t) {
        var e = t.getLocation(),
        i = this.rect();
        return i.x += this.getPosition().x,
        i.y += this.getPosition().y,
        cc.rectContainsPoint(i, e)
    },
    init: function(t, e) {
        this.type = !1,
        this._rect = cc.rect(0, 0, t, e),
        this.width = t,
        this.height = e
    }
});
Button.button_init = function(t, e, i) {
    var c = new Button;
    return c.initWithTexture(t),
    c.init(e, i),
    c
};
var Candy = cc.Sprite.extend({
    init: function() {
        this._scaleX = candy_width / 100,
        this._scaleY = candy_width / 100,
        this.setPosition(Width / 2, Height / 2)
    }
});
Candy.init_candy = function(t) {
    var e = new Candy;
    return e.initWithTexture(t),
    e.init(),
    e
};
var Effect = cc.Sprite.extend({
    addRemove: function(t) {
        this.runAction(cc.ScaleTo.create(.3, .1)),
        this.runAction(cc.MoveTo.create(.3, {
            x: this.getPositionX() + t[0],
            y: this.getPositionY() + t[1]
        }));
        var e = cc.sequence(cc.moveTo(.6, {
            x: this.getPositionX() + t[0],
            y: this.getPositionY() + t[1]
        }), cc.moveTo(0, {
            x: -Width / 2,
            y: 0
        }), cc.scaleTo(0, .5));
        this.runAction(e)
    }
});
Effect.effect_init = function(t) {
    var e = new Effect;
    return e.initWithTexture(t),
    e
};
var Width = document.documentElement.clientWidth,
Height = document.documentElement.clientHeight,
obstacles_width = Width / 20,
x = Width,
y = Height,
TITLE = "",
BlockCircleSprites = [],
every_grid_width = Width / 4.85,
GameStatus = "NORMAL",
unenter = "YES",
start_to_game = "NO",
CAR_WIDTH = x / 6,
YRatioX = Height / Width,
score = 0,
move_over = "false",
candy_width = Width / 20,
BTN_BIG = Height / 8,
BTN_SMI = Height / 15,
FONT_BIG = Width / 5,
FONT_MID = Width / 15,
FONT_SIM = Width / 20,
SIZE = {
    width: Width,
    height: Height
},
size = {
    width: Width,
    height: Height
},
food = [s_food_fir, s_food_sec, s_food_thrid, s_food_four, s_food_five],
EFFECT_POSITIONS = [[ - 30, 0], [ - 15, 15], [0, 30], [15, 15], [30, 0], [15, -15], [0, -30], [ - 15, -15]],
start_circle_position = [[x / 2 - every_grid_width, y + 80], [x / 2, y + 80], [x / 2 + every_grid_width, y + 80], [x / 2 - every_grid_width, 50], [x / 2, 50], [x / 2 + every_grid_width, 50], [50, y / 2 + every_grid_width], [50, y / 2], [50, y / 2 - every_grid_width], [x + 80, y / 2 + every_grid_width], [x + 80, y / 2], [x + 80, y / 2 - every_grid_width]],
BLUE_PRACTICES = [],
NICKNAME = ["初级吃货", "中级吃货", "高级吃货", "顶级吃货"],
StartScene = cc.Scene.extend({
    onEnter: function() {
        this._super();
        var t = new StartLayer;
        this.addChild(t, 1, 123),
        this.or_enter(),
        setView(),
        cc.director.pause()
    },
    ctor: function() {
        this._super(),
        this.schedule(this["continue"])
    },
    or_enter: function() {
        if ("YES" == unenter) {
            var t = new SMOVEOtherLayer;
            this.addChild(t, 3),
            t.init(),
            t.startLayer()
        }
    },
    remove_all_children: function() {
        var t = this.getChildren();
        this.removeChild(t[2]),
        this.removeAllChildren(t[1])
    },
    "continue": function() {
        "GO" == GameStatus && (GameStatus = "RUNNING", this.getChildByTag(1992).resume(), this.getChildByTag(1992).my_circle.resume(), GameStatus = "NORMAL")
    },
    restart: function() {
        this.reset();
        var t = new StartLayer;
        this.addChild(t, 1, 123)
    },
    reset: function() {
        score = 0,
        BlockCircleSprites = [],
        CARS = [],
        CANDY = {},
        LEFT_CANDY = [],
        RIGHT_CANDY = [],
        BLUE_PRACTICES = [],
        RED_PRACTICES = [],
        FAIL_CANDY = {
            type: null
        },
        POSITION = {
            LEFT_CAR_POSITION: 1,
            RIGHT_CAR_POSITION: 1
        }
    }
}),
SMOVEOtherLayer = cc.Layer.extend({
    init: function() {
        this._super(),
        this.size = SIZE
    },
    startLayer: function() {
        this.createBtn("help", s_help, .9 * Width, .9 * Height, BTN_SMI, BTN_SMI),
        this.createBtn("new_game", s_start_btn, Width / 2, .5 * Height, BTN_BIG, BTN_BIG),
        this.createFonts("吃货", "Arial", 50, Width / 2, .65 * Height, 2, "#FFFFFF"),
        this.createImage(s_black, Width / 2, Height / 2, Width, Height, 200, 1)
    },
    stopLayer: function() {
        this.createStopDescription(),
        this.createBtn("restart", s_restart, Width / 2, .45 * Height, BTN_BIG, BTN_BIG),
        this.createBtn("home", s_menu, .3 * Width, .3 * Height, BTN_SMI, BTN_SMI),
        this.createBtn("help", s_help, .7 * Width, .3 * Height, BTN_SMI, BTN_SMI),
        this.createBtn("share", s_share, .4 * Width, .2 * Height, BTN_SMI, BTN_SMI),
        this.createBtn("more", s_more, .6 * Width, .2 * Height, BTN_SMI, BTN_SMI),
        this.createImage(s_black, Width / 2, Height / 2, Width, Height, 200, 0)
    },
    shareLayer: function(t) {
        /*this.removeAllChildren(),
        this.createFonts("点击右上角，分享到朋友圈.", "Arial", 20, Width / 2, .65 * Height, 5, "#FFFFFF"),
        this.createFonts("是时候让那些伪吃货们现身了！", "Arial", 20, Width / 2, .55 * Height, 5, "#ff8127"),
        this.createImage(s_share_guide, .8 * Width, .85 * Height, 100, 100, 255, 5),
        this.creatnBtnLay(s_black, Width / 2, Height / 2, Width, Height, 200, 5, "back_share")*/
		dp_share(score);
    },
    createStopDescription: function() {
        0 == score && (score = "0");
        var t = localStorage.getItem("best_score") || 0;
        score > t && (t = score, localStorage.setItem("best_score", score)),
        this.createFonts("扑  街", "Arial", 60, Width / 2, .8 * Height, 1, "#FFFFFF"),
        this.createFonts("分数", "Arial", 30, .27 * Width, .7 * Height, 1, "#FFFFFF"),
        this.createFontsAnchor(score, "Arial", 30, .78 * Width, .7 * Height, 1, "#FFFFFF"),
        this.createFonts("最高分", "Arial", 30, .3 * Width, .64 * Height, 1, "#FFFFFF"),
        this.createFontsAnchor(t, "Arial", 30, .78 * Width, .64 * Height, 1, "#FFFFFF"),
        this.createFonts("称号", "Arial", 30, .27 * Width, .58 * Height, 1, "#FFFFFF"),
        10 > score ? (TITLE = NICKNAME[0], this.createFontsAnchor(NICKNAME[0], "Arial", 30, .78 * Width, .58 * Height, 1, "#FFFFFF")) : score >= 10 && 19 >= score ? (TITLE = NICKNAME[1], this.createFontsAnchor(NICKNAME[1], "Arial", 30, .78 * Width, .58 * Height, 1, "#FFFFFF")) : score >= 20 && 29 >= score ? (TITLE = NICKNAME[2], this.createFontsAnchor(NICKNAME[2], "Arial", 30, .78 * Width, .58 * Height, 1, "#FFFFFF")) : score >= 30 && (TITLE = NICKNAME[3], this.createFontsAnchor(NICKNAME[3], "Arial", 30, .78 * Width, .58 * Height, 1, "#FFFFFF"));
        dp_submitScore(score);
    },
    createBtn: function(t, e, i, c, r, s) {
        var o = cc.textureCache.addImage(e),
        n = Button.button_init(o, r, s);
        n._action = t,
        n.setPosition(i, c),
        this.addChild(n, 3)
    },
    back_ground_color: function(t, e, i) {
        var c = new cc.LayerColor(cc.color(t, e, i));
        c.ignoreAnchor = !1,
        c.anchorX = 1,
        c.anchorY = 1,
        c.x = Width,
        c.y = Height,
        this.addChild(c, 0)
    },
    creatnBtnLay: function(t, e, i, c, r, s, o, n) {
        var a = cc.textureCache.addImage(t),
        h = Button.button_init(a, c, r);
        h.setOpacity(100),
        h._action = n,
        h.setPosition(e, i),
        this.addChild(h, 3)
    },
    createHelpLayer: function() {
        this.removeAllChildren(),
        this.createFonts("游戏玩法", "Arial", 60, Width / 2, .85 * Height, 1, "#FFFFFF"),
        this.createFonts("吃掉食物", "Arial", FONT_SIM, Width / 2, .77 * Height, 1, "#FFFFFF"),
        this.createFonts("躲避黑子", "Arial", FONT_SIM, Width / 2, .72 * Height, 1, "#FFFFFF"),
        this.createFonts("点击方格移动", "Arial", FONT_SIM, Width / 2, .67 * Height, 1, "#FFFFFF"),
        this.createFonts("尽可能的争取高分", "Arial", FONT_SIM, Width / 2, .33 * Height, 1, "#FFFFFF"),
        this.createImage(s_black, Width / 2, Height / 2, Width, Height, 200, 0),
        this.createImage(s_howto, Width / 2, Height / 2, Width / 1.5, Width / 2.5, 255, 1),
        this.createBtn("home", s_menu, .41 * Width, .25 * Height, BTN_SMI, BTN_SMI),
        this.createBtn("restart", s_start_btn, .59 * Width, .25 * Height, BTN_SMI, BTN_SMI)
    },
    createFonts: function(t, e, i, c, r, s, o) {
        var n = cc.LabelTTF.create(t, e, i, o);
        return n.setPosition(c, r),
        n.setColor(cc.color(o)),
        this.addChild(n, s),
        n
    },
    createFontsAnchor: function(t, e, i, c, r, s, o) {
        G_Title = t;
        var n = cc.LabelTTF.create(t, e, i, o);
        n.setPosition(c, r),
        n.setColor(cc.color(o)),
        n.setAnchorPoint(cc.p(1, .5)),
        this.addChild(n, s)
    },
    createImage: function(t, e, i, c, r, s, o) {
        var n = cc.Sprite.create(t);
        n._scaleX = c / n.getContentSize().width,
        n._scaleY = r / n.getContentSize().height,
        n.setPosition(e, i),
        n.setOpacity(s),
        this.addChild(n, o)
    }
});